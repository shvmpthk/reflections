How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By comparing the changed lines in both the files. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    This could help to revert back to any previous version of the software.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Saving it manually makes it feasible with respect to storage and also makes sense logically.
    having it saved automatically makes it less storage friendly but increases reliability.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because git is a software version control system and hence saving all the files for a single commit makes more sense as all files in a single project are inter-dependent.

How can you use the commands git log and git diff to view the history of files?

    git log displays all the commits saved.
    And git diff works similar to diff command in bash linux, to identify the difference between any 2 commits, especially subsequent commits which makes more logical sense.

How might using version control make you more confident to make changes that
could break something?

    Because I can easily to go back to the stable version any time.

Now that you have your workspace set up, what do you want to try using Git for?

    To view and use github files.

Now that you have your workspace set up, what do you want to try using Git for?

	To view, edit and compile source codes( of my interest ) on github.



//Configurations

git config --global core.editor "'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3

//Password caching

git config --global credential.helper cache
# Set git to use the credential memory cache

git config --global credential.helper 'cache --timeout=3600'
# Set the cache to timeout after 1 hour (setting is in seconds)
